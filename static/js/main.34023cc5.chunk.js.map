{"version":3,"sources":["UserConfigs/PomoConfigsContext.js","PeriodicChecks/PeriodicFaceDetection.js","flipclock/ReactFlipClock.js","PomodoroHistory/PomodoroTimeCard.js","PomodoroHistory/PomodoroList.js","PomodoroHistory/PomodoroTimeChart.js","PomodoroStatus/PomodStatus.js","BackgroundPlayers/YoutubePlayer.js","BackgroundPlayers/PlayerWithStatus.js","PeriodicChecks/HealthMonitor.js","dialogs/PomoConfigsDialog.js","dialogs/IntroDialog.js","FaceRecognitionPomo.js","reportWebVitals.js","index.js"],"names":["defaultPomoConfigs","alertStudySeconds","alertRestSeconds","enableNotification","notificationIntervalSeconds","notificationIntervalMultiplier","tempMissingSeconds","history","maxLocalStorageTimeSlot","showPomodoroHistory","onlyShowToday","faceRecognition","detectionInterval","scoreThreshold","showFaceRecognitionStatus","showFaceRecognitionCanvas","showCameraPreview","enableDetection","playerUrl","focusNotificationText","restNotificationText","PomoConfigsContext","React","createContext","StatusMessage","props","use","tag","className","css","msg","status","style","color","GetFaceDetectionStatus","cameraSupported","cameraReady","faceDetected","loadedModelCount","cameraMessage","cameraStatus","desktop","span","phone","PeriodicFaceDetection","PomoConfigs","useContext","webcamRef","useRef","canvasRef","useState","detected","setDetected","navigator","setCameraReady","onFaceDetectionResult","detectionRunning","setDetectionRunning","videoTrackRef","humanML","imageCaptureSupported","window","useEffect","humanMLConfig","modelBasePath","wasmPath","face","enabled","emotion","antispoof","liveness","mesh","attention","iris","description","body","hand","object","gesture","debug","then","HumanModule","current","Human","init","load","console","log","useInterval","newCameraReady","readyState","muted","detectUsingModel","inputVideo","video","input","capture","ImageCapture","grabFrame","detect","detectionResult","detectedFace","filter","x","score","at","draw","canvas","all","videoConstraints","width","ideal","height","facingMode","mediaDevices","getSupportedConstraints","frameRate","hiddenCameraHeight","cameraHeight","Object","keys","models","model","length","currentProgress","closed","progress","audio","ref","screenshotFormat","onUserMedia","stream","getVideoTracks","onUserMediaError","err","ReactFlipClock","flipclockRef","flipclockElement","startTime","FlipClock","Date","showLabels","originalValue","value","start","toJSON","Math","abs","formatSeconds","seconds","preserveSeconds","roundSeconds","floor","minutes","secondsResidual","minutesResidual","hours","PomodoroCard","record","index","title","undefined","timePeriod","toLocaleTimeString","slice","endTime","RestTimeLineItem","onDeleteRestSession","Item","dot","SmileOutlined","content","showArrow","label","onClick","PomodoroList","mergedTimeTable","showTimeSlots","toDateString","pomodoroList","map","ClockCircleOutlined","restList","timeLineItems","concat","sort","a","b","mode","Chart","lazy","PomodoroHistoryTimeChart","timeSlot","chartSessionName","reduce","total","curr","options","plotOptions","bar","horizontal","barHeight","colors","xaxis","type","labels","datetimeUTC","tooltip","custom","opts","timeSlotInfo","w","config","series","seriesIndex","data","dataPointIndex","info","pomoCard","renderToString","name","y","getTime","pomoStatusClassName","PomoStatus","statusMessage","focus","usedClassName","YoutubePlayer","playerRef","shouldPlay","playerVars","autoplay","loop","playlist","vid","internalPlayer","playVideo","pauseVideo","YouTube","videoId","PlayerWithStatus","youtubeVid","url","match","youtube_parser","overTime","playerStatusClassName","bounds","HealthMonitor","snackbarMessage","setSnackBarMessage","snackbarOpen","setSnackBarOpen","setOverTime","getDefaultTimeSlot","usedStateTime","useLocalStorageState","defaultValue","serializer","v","JSON","stringify","deserializer","storedTable","parse","push","setMergedTimeTable","lastTimeSlot","notificationHistory","setNotificationHistory","useSound","process","playDingBellSfx","webNotificationSupported","setWebNotificationSupported","sendNotification","message","icon","lastSendTime","nextSendInterval","Notification","permission","badge","isSupported","requestPermission","document","open","onClose","dismissesOnAction","action","detection","NewMergedTimeTable","produce","draftMergeTable","currDetected","pop","prevList","currentTimeSlot","newList","newObject","PomoConfigsDialog","formRef","useImmer","pomoConfigs","newPomoConfig","setNewPomoConfig","formValid","setFormValid","zIndex","preventOutsideDismiss","onOpen","event","target","setPomoConfigs","onChange","newValid","reportValidity","required","suffix","pattern","min","validity","valid","oldConfig","parseInt","newTime","defaultChecked","checked","step","newValue","parseFloat","minLength","resizeable","disabled","isDefaultAction","IntroDialog","padding","theme","children","FaceRecognitionPomo","openConfigDialog","setOpenConfigDialog","openIntroDialog","setOpenIntroDialog","primary","secondary","alignStart","alignEnd","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","serviceWorker","register","registration","scope","catch","e"],"mappings":"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","file":"static/js/main.34023cc5.chunk.js","sourcesContent":["import React from 'react';\n\nconst defaultPomoConfigs = {\n  alertStudySeconds: 25 * 60,\n  alertRestSeconds: 5 * 60,\n  enableNotification: false,\n  notificationIntervalSeconds: 60,\n  notificationIntervalMultiplier: 2,\n  tempMissingSeconds: 60,\n  history: {\n    maxLocalStorageTimeSlot: 100,\n    showPomodoroHistory: true,\n    onlyShowToday: true,\n  },\n  faceRecognition: {\n    detectionInterval: 5,\n    scoreThreshold: 0.95,\n    showFaceRecognitionStatus: true,\n    showFaceRecognitionCanvas: false,\n    showCameraPreview: false,\n  },\n  enableDetection: false,\n  playerUrl: \"https://www.youtube.com/watch?v=q4YyeEM9jsc\",\n  focusNotificationText: \"Time to focus!\",\n  restNotificationText: \"Let's take a break.\"\n}\nconst PomoConfigsContext = React.createContext(defaultPomoConfigs);\n\nexport { defaultPomoConfigs, PomoConfigsContext}","import { useRef, useEffect, useState, useContext } from 'react';\nimport Webcam from \"react-webcam\";\n//import * as faceapi from 'face-api.js';\n\nimport useInterval from 'use-interval'\nimport { css } from '@emotion/css'\nimport CheckSquareFilled from '@ant-design/icons/CheckSquareFilled';\nimport CloseSquareOutlined from '@ant-design/icons/CloseSquareOutlined';\n\nimport { PomoConfigsContext } from '../UserConfigs/PomoConfigsContext';\n\nimport { Typography } from '@rmwc/typography';\nimport '@rmwc/typography/styles';\nimport { Grid, GridCell } from '@rmwc/grid'\nimport '@rmwc/grid/styles';\nimport { LinearProgress } from '@rmwc/linear-progress';\nimport '@rmwc/linear-progress/styles';\n\nimport \"image-capture\";\n\nfunction StatusMessage(props) {\n  return (\n    <Typography use=\"body2\" tag=\"div\" className={css`text-align: center`}>\n      {props.msg} {props.status ?\n        <CheckSquareFilled style={{ color: \"#1faa00\" }} /> :\n        <CloseSquareOutlined style={{ color: \"#a30000\" }} />\n      }\n    </Typography>\n  )\n}\n\nfunction GetFaceDetectionStatus(cameraSupported, cameraReady, faceDetected, loadedModelCount) {\n  const cameraMessage = cameraSupported ? \"Camera Ready:\" : \"Camera Supported\";\n  const cameraStatus = cameraSupported ? cameraReady : cameraSupported;\n  return (\n    <Grid>\n      <GridCell desktop={4} span={2} phone={4}>\n        <StatusMessage msg={cameraMessage} status={cameraStatus} />\n      </GridCell>\n      <GridCell desktop={4} span={2} phone={4}>\n        <StatusMessage msg=\"Model loaded:\" status={loadedModelCount > 1} />\n      </GridCell>\n      <GridCell desktop={4} span={2} phone={4}>\n        <StatusMessage msg=\"Face Detected:\" status={faceDetected} />\n      </GridCell>\n    </Grid>\n  )\n}\n\nfunction PeriodicFaceDetection(props) {\n  const PomoConfigs = useContext(PomoConfigsContext)\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [detected, setDetected] = useState(false)\n  const [cameraSupported] = useState('mediaDevices' in navigator);\n  const [cameraReady, setCameraReady] = useState(false);\n\n  const onFaceDetectionResult = props.onFaceDetectionResult\n  const detectionInterval = PomoConfigs.faceRecognition.detectionInterval;\n  const scoreThreshold = PomoConfigs.faceRecognition.scoreThreshold;\n  const enableDetection = PomoConfigs.enableDetection;\n  const [detectionRunning, setDetectionRunning] = useState(false);\n  const videoTrackRef = useRef(null);\n  \n  const humanML = useRef(null);\n\n  const imageCaptureSupported = 'ImageCapture' in window;\n\n  // Initialize ML\n  useEffect(() => {\n    if (!enableDetection) return;\n    const humanMLConfig = {\n      modelBasePath: `https://cdn.jsdelivr.net/npm/@vladmandic/human/models/`,\n      wasmPath: \"/face-recognition-pomodoro/models/\",\n      face: {\n        enabled: true,\n        emotion: { enabled: false },\n        antispoof: { enabled: false },\n        liveness: { enabled: false },\n        mesh: { enabled: true },\n        attention: { enabled: false },\n        iris: { enabled: false },\n        description: { enabled: false },\n      },\n      body: { enabled: false },\n      hand: { enabled: false },\n      object: { enabled: false },\n      gesture: { enabled: false },\n      debug: true\n    }\n    import('@vladmandic/human').then(\n      (HumanModule) => {\n        humanML.current = new HumanModule.Human(humanMLConfig);\n        humanML.current.init(humanMLConfig).then(() => {\n          humanML.current.load(humanMLConfig);\n          console.log(\"Human init\", humanML.current);\n        })\n      }\n    )\n  }, [enableDetection])\n\n  // Detect face every n seconds\n  useInterval(() => {\n    if (!enableDetection) return;\n    if (detectionRunning) return;\n    if (!humanML.current) return;\n\n    const newCameraReady = (videoTrackRef.current \n      && videoTrackRef.current.readyState === \"live\" \n      && !videoTrackRef.current.muted \n      && videoTrackRef.current.enabled);\n\n    if (newCameraReady !== cameraReady) {\n      setCameraReady(newCameraReady);\n    }\n    if (!newCameraReady) return;\n\n    async function detectUsingModel() {\n      try {\n        setDetectionRunning(true);\n\n        const inputVideo = webcamRef.current.video;\n        var input = inputVideo;\n        if (imageCaptureSupported) { \n          const capture = new ImageCapture(videoTrackRef.current)\n          input = await capture.grabFrame();\n        }\n\n        const detectionResult = await humanML.current.detect(input)\n        const detectedFace = detectionResult.face.filter((x) => x.score > scoreThreshold).at(-1)\n        onFaceDetectionResult(detectedFace);\n        setDetected(detectedFace);\n        //console.log(\"Detection used \", ((new Date() - startTime).toString()), \"ms\");\n\n        if (PomoConfigs.faceRecognition.showFaceRecognitionCanvas) {\n          humanML.current.draw.canvas(input, canvasRef.current)\n          humanML.current.draw.all(canvasRef.current, detectionResult);\n        }\n      }\n      finally {\n        setDetectionRunning(false);\n      }\n    }\n\n    detectUsingModel()\n  }, detectionInterval * 1000, true)\n\n  function onUserMedia(stream) {\n    console.log(\"New media stream\", stream)\n    videoTrackRef.current = stream.getVideoTracks()[0];\n  }\n  \n  const videoConstraints = {\n    width: { ideal: 640 },\n    height: { ideal: 480 },\n    facingMode: \"user\",\n  }\n  // Save bandwidth by reducing framerate\n  if (enableDetection && !PomoConfigs.faceRecognition.showCameraPreview && navigator.mediaDevices.getSupportedConstraints) {\n    const videoConstraintAbility = navigator.mediaDevices.getSupportedConstraints();\n    if (videoConstraintAbility.frameRate) {\n      videoConstraints[\"frameRate\"] = { ideal: 2 }\n    }\n  }\n\n  // If image capture is not supported, we will need to read from video element.\n  // Video element won't update if it's not in view\n  const hiddenCameraHeight = imageCaptureSupported ? \"0px\" : \"1px\";\n  const cameraHeight = PomoConfigs.faceRecognition.showCameraPreview ? \"100%\" : hiddenCameraHeight\n  const loadedModelCount = humanML.current ? Object.keys(humanML.current.models).filter((model) => (humanML.current.models[model] !== null)).length : 0;\n  const currentProgress = cameraSupported * 0.1 + cameraReady * 0.4 + 0.5 * (loadedModelCount / 2);\n  return (\n    <>\n      <Grid>\n      \n        <GridCell span={12}>\n          <LinearProgress closed={currentProgress >= 1} progress={currentProgress} />\n          {enableDetection && PomoConfigs.faceRecognition.showFaceRecognitionStatus ?\n            GetFaceDetectionStatus(cameraSupported, cameraReady, detected, loadedModelCount) : <></>}\n        </GridCell>\n\n        {\n          enableDetection ?\n            (\n              <GridCell span={12}>\n                <div className={\n                  css`\n              height: ${cameraHeight};\n              width: ${cameraHeight};\n              overflow: hidden;\n            `\n                }>\n                  <Webcam\n                    audio={false}\n                    ref={webcamRef}\n                    screenshotFormat=\"image/jpeg\"\n                    videoConstraints={videoConstraints}\n                    onUserMedia={onUserMedia}\n                    onUserMediaError={(err) => console.log(err)}\n                  />\n                </div>\n              </GridCell>\n            ) : <></>\n        }\n\n        {\n          enableDetection && humanML && PomoConfigs.faceRecognition.showFaceRecognitionCanvas ?\n            <GridCell span={12}>\n              <canvas width=\"640px\" height=\"480px\" ref={canvasRef} />\n            </GridCell> : <></>\n        }\n      </Grid>\n    </>\n  )\n}\n\nexport default PeriodicFaceDetection","import { useEffect, useRef } from 'react';\n\nimport FlipClock from 'flipclock';\nimport 'flipclock/dist/flipclock.css';\nimport './flipclock.css'\n\nfunction ReactFlipClock(props) {\n  // From example: \n  // https://github.com/objectivehtml/FlipClock/blob/v0.10.8/examples/load-new-clock-face.html\n  const flipclockRef = useRef(null);\n  const flipclockElement = useRef(null);\n  const startTime = props.startTime;\n\n  useEffect(() => {\n    if (flipclockElement.current === null) {\n      flipclockElement.current = new FlipClock(flipclockRef.current, new Date(startTime), {\n        face: 'HourCounter',\n        showLabels: false,\n      });\n      flipclockElement.current.originalValue = new Date(startTime);\n      // TODO: Use minute counter when time < 59 minutes\n      //flipclockElement.current.timer.started = new Date(startTime);\n      flipclockElement.current.value = new Date();\n      flipclockElement.current.start()\n      // console.log(flipclockElement.current)\n    }\n\n    if (\n      // Start time changed\n      (startTime !== flipclockElement.current.originalValue.toJSON()) ||\n      // Some times the clock is out of sync, we need to manually sync them\n      (Math.abs(new Date() - flipclockElement.current.value.value) > 1000)\n    ) {\n      // flipclockElement.current.timer.started = new Date(startTime);\n      flipclockElement.current.originalValue = new Date(startTime);\n      flipclockElement.current.value = new Date();\n    }\n  })\n\n  return (\n    <div ref={flipclockRef} />\n  )\n}\n\nexport default ReactFlipClock;","import Card from 'antd/lib/card';\nimport { css } from '@emotion/css'\n\nexport function formatSeconds(seconds, preserveSeconds = false) {\n    const roundSeconds = Math.floor(seconds)\n    if (roundSeconds < 60) {\n      return `${roundSeconds}s`\n    }\n    if (roundSeconds < 3600) {\n      const minutes = Math.floor(roundSeconds / 60);\n      const secondsResidual = roundSeconds - minutes * 60;\n      return preserveSeconds ? `${minutes}m ${secondsResidual}s` : `${minutes}m`;\n    }\n    const minutes = Math.floor(roundSeconds / 60);\n    const minutesResidual = minutes % 60;\n    const hours = Math.floor(minutes / 60);\n    return `${hours}h ${minutesResidual}m`\n  }\n  \n\nexport function PomodoroCard(props) {\n    const record = props.record\n    const index = props.index\n\n    const title = index ? `Pomodoro #${index}` : undefined;\n  \n    return (\n      <>\n  \n  <Card title={title}>\n        <div className={\n          css`\n          display: flex;\n          justify-content: space-around;\n          align-item: center;\n        `\n        }>\n          <span className={\n            css`\n          border-radius: 50%;\n          background: #b0003a;\n          width: 3em;\n          height: 3em;\n          text-align: center;\n          vertical-align: middle;\n          display: inline-block;\n          line-height: 3em;\n          font-size: 1.5em;\n          color: white;\n          font-weight: bold;\n        `\n          }>\n            {formatSeconds(record.timePeriod)}\n          </span>\n          <div className={\n            css`\n              display: flex;\n              align-item: center;\n              justify-content: space-around;\n              flex-direction: column;\n            `\n          }>\n          <p className={\n            css`\n              font-size: 1.5em;\n              font-weight: bold;\n              margin: 0 0 0 10px;\n            `\n          }>\n            {new Date(record.startTime).toLocaleTimeString().slice(0, 5)} - {new Date(record.endTime).toLocaleTimeString().slice(0, 5)}\n          </p>\n          </div>\n  \n        </div>\n  \n      </Card>\n      </>\n    )\n  }\n","import { useContext } from 'react';\nimport { Timeline } from 'antd';\nimport { ClockCircleOutlined, SmileOutlined } from '@ant-design/icons';\n\nimport { PomoConfigsContext } from '../UserConfigs/PomoConfigsContext'\nimport { formatSeconds, PomodoroCard } from './PomodoroTimeCard';\n\nimport { Button } from '@rmwc/button';\nimport '@rmwc/button/styles';\nimport { Tooltip } from '@rmwc/tooltip';\nimport '@rmwc/tooltip/styles';\n\n\nimport {css} from '@emotion/css'\n\nfunction RestTimeLineItem(props) {\n  const record = props.record;\n  const onDeleteRestSession = props.onDeleteRestSession;\n\n  return (\n    <Timeline.Item color=\"green\" dot={<SmileOutlined />}>\n      <div className={\n        css`\n          display: flex;\n          justify-content: space-between;\n        `\n      }>\n        <p> Rest for {formatSeconds(record.timePeriod)} </p>\n        <Tooltip content=\"Remove this session, and merge adjacent session.\" showArrow>\n          <Button label=\"Remove\" onClick={() => { onDeleteRestSession(record.startTime) }} />\n        </Tooltip>\n      </div>\n    </Timeline.Item>\n  )\n}\n\n\nfunction PomodoroList(props) {\n  const mergedTimeTable = props.mergedTimeTable\n  const PomoConfigs = useContext(PomoConfigsContext)\n\n  const showTimeSlots = mergedTimeTable\n    .filter((record => {\n      if (PomoConfigs.history.onlyShowToday) {\n        return (new Date(record.startTime).toDateString() === new Date().toDateString())\n      }\n      return true\n    }))\n\n  const pomodoroList = showTimeSlots.filter((x) => x.detected).map(\n    (record, index) => {\n      return (\n        <Timeline.Item record={record} dot={<ClockCircleOutlined />} key={record.startTime}>\n          <PomodoroCard record={record} index={index + 1} />\n        </Timeline.Item>\n      )\n    }\n  )\n  \n  const restList = showTimeSlots.filter((x) => !x.detected).map(\n    (record, index) => {\n      return (\n        <RestTimeLineItem\n          record={record}\n          key={record.startTime}\n          onDeleteRestSession={props.onDeleteRestSession}\n        />\n      )\n    }\n  )\n\n  const timeLineItems = pomodoroList.concat(restList);\n  timeLineItems.sort((a, b) => a.props.record.startTime < b.props.record.startTime ? 1 : -1);\n\n  return (\n    <Timeline mode=\"left\">\n      {timeLineItems}\n    </Timeline>\n  )\n}\n\nexport default PomodoroList","import { formatSeconds, PomodoroCard} from \"./PomodoroTimeCard\";\nimport {renderToString} from 'react-dom/server';\nimport React from \"react\";\n\nconst Chart = React.lazy(() => import(\"react-apexcharts\"));\n\nfunction PomodoroHistoryTimeChart(props) {\n    const mergedTimeTable = props.mergedTimeTable.filter(\n        (timeSlot) => (new Date(timeSlot.startTime).toDateString() === new Date().toDateString())\n    )\n    const focusTime = mergedTimeTable.filter((x) => x.detected).reduce((total, curr) => {\n        return total + curr.timePeriod;\n    } ,0)\n    const chartSessionName = \"Total: \" + formatSeconds(focusTime)\n\n    const options = {\n        plotOptions: {\n            bar: {\n                horizontal: true,\n                barHeight: \"100%\"\n            },\n        },\n        colors : [\n            \"#b0003a\"\n        ],\n        xaxis: {\n            type: 'datetime',\n            labels: {\n                datetimeUTC: false\n            }\n        },\n        tooltip: {\n            custom: function(opts) {\n              const timeSlotInfo = opts.w.config.series[opts.seriesIndex].data[opts.dataPointIndex].info;\n              const pomoCard = <PomodoroCard record={timeSlotInfo} />\n              return renderToString(pomoCard)\n            }\n        },\n    };\n\n    const dataSeries = mergedTimeTable.map(\n        (timeSlot) => {\n            return {\n            x: chartSessionName,\n            y: [\n              new Date(timeSlot.startTime).getTime(),\n              new Date(timeSlot.endTime).getTime()\n            ],\n            info: timeSlot\n          }\n        }\n    )\n\n    const focusSession = dataSeries.filter((data) => data.info.detected);\n\n    const series = [\n        {\n          name: \"focus\",\n          data: focusSession,\n        }\n    ];\n\n    return (\n        <Chart options={options} series={series} type=\"rangeBar\" height={100} />\n    )\n}\n\nexport default PomodoroHistoryTimeChart;","import { css } from \"@emotion/css\"\n\nexport const pomoStatusClassName = css`\n  font-size: 20vw;\n  margin: 0 auto;\n  text-align: center;\n  @media (min-width: 700px) {\n    font-size: 140px;\n  }\n  @media (max-width: 350px) {\n    font-size: 75px;\n  }\n`\n\nexport function PomoStatus(props) {\n  const statusMessage = props.focus ? \"WORKING\" : \"REST\";\n  const usedClassName = props.className || pomoStatusClassName\n  return (\n    <p className={usedClassName}> \n      {statusMessage} \n    </p>\n  )\n}","import YouTube from 'react-youtube';\nimport { css } from '@emotion/css';\nimport { useEffect, useRef } from 'react';\n\nexport function YoutubePlayer(props) {\n  const playerRef = useRef(null);\n  const shouldPlay = props.shouldPlay;\n\n  const opts = {\n    height: '100%',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n      loop: 1,\n      playlist: props.vid,\n    },\n  };\n\n  useEffect(() => {\n    if (!playerRef.current) return;\n    console.log(playerRef.current.internalPlayer);\n    if (shouldPlay) {\n      playerRef.current.internalPlayer.playVideo()\n    }\n    else {\n      playerRef.current.internalPlayer.pauseVideo()\n    }\n  }, [shouldPlay])\n\n  return (\n      <YouTube className={\n        css`\n          height: 100%;\n          width: 100%;\n          position: relative;\n        `\n      } ref={playerRef} videoId={props.vid} opts={opts} />\n  );\n\n}","import { YoutubePlayer } from './YoutubePlayer'\nimport Draggable from 'react-draggable';\nimport { css } from '@emotion/css';\nimport { PomoStatus } from '../PomodoroStatus/PomodStatus';\nimport ReactFlipClock from '../flipclock/ReactFlipClock';\nimport { useContext } from 'react';\nimport { PomoConfigsContext } from '../UserConfigs/PomoConfigsContext';\n\nfunction youtube_parser(url){\n  var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n  var match = url.match(regExp);\n  return (match&&match[7].length===11)? match[7] : false;\n}\n\nexport function PlayerWithStatus(props) {\n  const PomoConfigs = useContext(PomoConfigsContext);\n  const youtubeUrl = PomoConfigs.playerUrl ? PomoConfigs.playerUrl : \"\";\n  const youtubeVid = youtube_parser(youtubeUrl)\n  if (!youtubeVid) {\n    return (<></>)\n  }\n\n  var shouldPlay = false;\n  if (props.focus && !props.overTime) {\n    shouldPlay = true;\n  }\n\n  const playerStatusClassName = css`\n    height: calc(100vh - 64px);\n    width: 100vw;\n    max-width:100%;\n    max-height:100%;\n  `\n\n  return (\n    <div className={playerStatusClassName}>\n      <YoutubePlayer vid={youtubeVid} shouldPlay={shouldPlay}/>\n      <div>\n        <Draggable bounds={\".\" + playerStatusClassName}>\n          <div className={css`\n            background: white;\n            opacity: 0.7;\n            position: absolute;\n            top: 10vh;\n            left: 10px;\n\n            .flip-clock {\n                font-size: 15px;\n            }\n\n            padding: 10px;\n            border-radius: 10px;\n            cursor: grab;\n        `}>\n            <PomoStatus className={\n              css`\n                font-size: 70px;\n                margin: 0 auto;\n                text-align: center;\n              `\n            } focus={props.focus} />\n            <ReactFlipClock startTime={props.startTime} />\n          </div>\n        </Draggable>\n      </div>\n\n    </div>\n\n  )\n}","import { useEffect, useState } from 'react';\nimport useInterval from 'use-interval'\nimport { css } from '@emotion/css'\nimport { useLocalStorageState } from 'ahooks';\nimport useSound from 'use-sound';\nimport produce from 'immer';\nimport { useContext } from 'react';\n\nimport { Grid, GridCell } from '@rmwc/grid'\nimport '@rmwc/grid/styles';\nimport { Snackbar, SnackbarAction } from '@rmwc/snackbar';\nimport '@rmwc/snackbar/styles';\n\nimport PeriodicFaceDetection from './PeriodicFaceDetection';\nimport ReactFlipClock from '../flipclock/ReactFlipClock.js'\nimport PomodoroList from '../PomodoroHistory/PomodoroList';\nimport PomodoroHistoryTimeChart from '../PomodoroHistory/PomodoroTimeChart';\nimport { PomoConfigsContext } from '../UserConfigs/PomoConfigsContext'\nimport {PomoStatus} from '../PomodoroStatus/PomodStatus'\nimport { PlayerWithStatus } from '../BackgroundPlayers/PlayerWithStatus';\n\nimport {formatSeconds} from '../PomodoroHistory/PomodoroTimeCard'\n\nfunction HealthMonitor(props) {\n  const PomoConfigs = useContext(PomoConfigsContext);\n\n  const alertStudySeconds = PomoConfigs.alertStudySeconds;\n  const alertRestSeconds = PomoConfigs.alertRestSeconds;\n  const maxLocalStorageTimeSlot = PomoConfigs.history.maxLocalStorageTimeSlot;\n\n  const [snackbarMessage, setSnackBarMessage] = useState(\"\");\n  const [snackbarOpen, setSnackBarOpen] = useState(false);\n  const [overTime, setOverTime] = useState(false);\n\n  function getDefaultTimeSlot(detected = true, startTime = null) {\n    console.log(new Date(), \"Added new session: detected:\", detected, \"startTime\", startTime);\n    const usedStateTime = startTime ? startTime : new Date().toJSON();\n    const timePeriod = Math.floor((new Date() - new Date(usedStateTime)) / 1000);\n    return {\n      startTime: usedStateTime,\n      endTime: new Date().toJSON(),\n      detected: detected,\n      timePeriod: timePeriod\n    }\n  }\n  const [mergedTimeTable, setMergedTimeTable] = useLocalStorageState('mergedTimeTable', {\n    defaultValue: [getDefaultTimeSlot(true)],\n    serializer: (v) => JSON.stringify(v),\n    deserializer: (v) => {\n      const storedTable = JSON.parse(v)\n      // Check diff between last end time and current time\n      if (new Date() - new Date(storedTable.at(-1).endTime) > alertStudySeconds * 1000) {\n        storedTable.push(getDefaultTimeSlot(true))\n      }\n      // Keep only last maxLocalStorageTimeSlot session for now\n      return storedTable.slice(0 - maxLocalStorageTimeSlot)\n    }\n  });\n\n  const lastTimeSlot = mergedTimeTable.at(-1)\n\n  const [notificationHistory, setNotificationHistory] = useState({})\n  const [playDingBellSfx] = useSound(process.env.PUBLIC_URL + '/sounds/dingbell.aac');\n\n  const tempMissingSeconds = PomoConfigs.tempMissingSeconds;\n\n  const [webNotificationSupported, setWebNotificationSupported] = useState(false)\n\n  useEffect(() => {\n    const isSupported = 'Notification' in window &&\n      'serviceWorker' in navigator &&\n      'PushManager' in window;\n    setWebNotificationSupported(isSupported)\n    if (!isSupported) {\n      console.log(\"This browser does not support desktop notification\")\n      return;\n    }\n    if (PomoConfigs.enableNotification) {\n      Notification.requestPermission();\n    }\n  }, [PomoConfigs.enableNotification])\n\n  function sendNotification(message, icon) {\n    if (notificationHistory[message] && (\n      (new Date() - notificationHistory[message].lastSendTime) < (notificationHistory[message].nextSendInterval * 1000))) {\n      // Only send notification every notificationIntervalSeconds\n      return;\n    }\n\n    // If it's okay let's create a notification\n    playDingBellSfx();\n    if (webNotificationSupported && Notification.permission === \"granted\") {\n      new Notification(message, {icon:icon, badge:icon});\n    }\n\n    setSnackBarOpen(true);\n    setSnackBarMessage(message);\n\n    const nextSendInterval = notificationHistory[message] ?\n      notificationHistory[message].nextSendInterval * PomoConfigs.notificationIntervalMultiplier :\n      PomoConfigs.notificationIntervalSeconds;\n\n    notificationHistory[message] = {\n      lastSendTime: new Date(),\n      nextSendInterval: nextSendInterval\n    }\n    setNotificationHistory(notificationHistory);\n  }\n\n  function onFaceDetectionResult(detection) {\n    // calculate continue time\n    const NewMergedTimeTable = produce(mergedTimeTable, (draftMergeTable) => {\n      const currDetected = (detection !== undefined)\n      if (draftMergeTable.at(-1).detected !== currDetected\n        && (draftMergeTable.at(-1).timePeriod < tempMissingSeconds)) {\n        // If last section is less than tempMissingSeconds seconds\n        // remove last section so that we have a more continous time range.\n        draftMergeTable.pop();\n      }\n\n      if (draftMergeTable.length === 0 || draftMergeTable.at(-1).detected !== currDetected) {\n        draftMergeTable.push(getDefaultTimeSlot(currDetected, draftMergeTable.at(-1).endTime))\n        return;\n      }\n\n      // If work time not refreshed for some time, start a new session, as computer lock will prevent camera show\n      if (draftMergeTable.at(-1).detected && (new Date() - new Date(draftMergeTable.at(-1).endTime)) > 1000 * PomoConfigs.tempMissingSeconds) {\n        // Add a rest session\n        draftMergeTable.push(getDefaultTimeSlot(false, draftMergeTable.at(-1).endTime))\n        // Add a work session\n        draftMergeTable.push(getDefaultTimeSlot(true, new Date().toJSON()))\n        return;\n      }\n\n      draftMergeTable.at(-1).endTime = new Date().toJSON()\n      draftMergeTable.at(-1).timePeriod = (new Date() - new Date(draftMergeTable.at(-1).startTime)) / 1000\n\n    })\n    setMergedTimeTable(NewMergedTimeTable);\n  }\n\n  function deleteRestSession(startTime) {\n    setMergedTimeTable(\n      mergedTimeTable.reduce((prevList, currentTimeSlot) => {\n        const newList = prevList.slice();\n        if ((currentTimeSlot.startTime === startTime) || \n            (prevList.at(-1) \n            && prevList.at(-1).endTime === currentTimeSlot.startTime \n            && prevList.at(-1).detected === currentTimeSlot.detected)) {\n          // Merge slots\n          const newObject = {\n            ...newList.at(-1),\n            endTime: currentTimeSlot.endTime,\n            timePeriod: (new Date(prevList.at(-1).endTime) - new Date(prevList.at(-1).startTime)) / 1000\n          }\n          newList.pop()\n          newList.push(newObject);\n          return newList; \n        }\n        newList.push(currentTimeSlot);\n        return newList;\n      }, [])\n    )\n  }\n\n  useInterval(() => {\n    // Update continue face time and continue rest time\n    const timePeriod = (new Date() - new Date(lastTimeSlot.startTime)) / 1000\n    if (lastTimeSlot.detected && (timePeriod > alertStudySeconds)) {\n      setOverTime(true);\n      document.title = PomoConfigs.restNotificationText;\n      const iconUrl = \"https://chenditc.github.io/face-recognition-pomodoro/images/relax.png\"\n      sendNotification(PomoConfigs.restNotificationText, iconUrl)\n      return;\n    }\n\n    if (!lastTimeSlot.detected && (timePeriod > alertRestSeconds)) {\n      setOverTime(true);\n      document.title = PomoConfigs.focusNotificationText;\n      const iconUrl = \"https://chenditc.github.io/face-recognition-pomodoro/images/focus.png\"\n      sendNotification(PomoConfigs.focusNotificationText, iconUrl)\n      return;\n    }\n\n    document.title = formatSeconds(timePeriod, true);\n    setOverTime(false);\n    // Only change when there is some item, prevent rerender\n    if ((timePeriod > PomoConfigs.tempMissingSeconds) && (Object.keys(notificationHistory).length > 0)) {\n      setNotificationHistory({})\n    }\n  }, 500, true)\n\n  return (\n    <>\n      <PlayerWithStatus focus={lastTimeSlot.detected} overTime={overTime} startTime={lastTimeSlot.startTime}/>\n    <div className={\n      css`\n      margin: 0 15px;\n      max-width: 700px;\n      min-width: 350px;\n      @media (min-width: 730px) {\n        margin: 0 auto;\n      }\n      `\n    }>\n      <Snackbar\n        open={snackbarOpen}\n        onClose={() => setSnackBarOpen(false)}\n        message={snackbarMessage}\n        dismissesOnAction\n        action={\n          <SnackbarAction\n            label=\"Dismiss\"\n            onClick={() => console.log('Dismiss notification')}\n          />\n        }\n      />\n      <Grid>\n        <GridCell span={12}>\n          <PomoStatus focus={lastTimeSlot.detected} />\n        </GridCell>\n        <GridCell span={12}>\n          <ReactFlipClock startTime={lastTimeSlot.startTime} />\n        </GridCell>\n        <GridCell span={12}>\n          <PeriodicFaceDetection\n            onFaceDetectionResult={onFaceDetectionResult}\n          />\n        </GridCell>\n        {\n          PomoConfigs.history.showPomodoroHistory ?\n            <GridCell span={12}>\n                      <h3>Pomodoro History</h3>\n              <PomodoroHistoryTimeChart mergedTimeTable={mergedTimeTable} />\n              <PomodoroList mergedTimeTable={mergedTimeTable} onDeleteRestSession={deleteRestSession}/>\n            </GridCell> : <></>\n        }\n      </Grid>\n\n    </div>\n    </>\n  )\n}\n\nexport default HealthMonitor;","import { Dialog, DialogTitle, DialogContent, DialogActions, DialogButton } from '@rmwc/dialog';\nimport '@rmwc/dialog/styles';\nimport { TextField } from '@rmwc/textfield';\nimport '@rmwc/textfield/styles';\nimport { Grid, GridRow, GridCell } from '@rmwc/grid'\nimport '@rmwc/grid/styles';\nimport { Switch } from '@rmwc/switch';\nimport '@rmwc/switch/styles';\nimport { Typography } from '@rmwc/typography';\nimport '@rmwc/typography/styles';\nimport { Tooltip } from '@rmwc/tooltip';\nimport '@rmwc/tooltip/styles';\nimport { ListDivider } from '@rmwc/list';\nimport '@rmwc/list/styles';\n\nimport './PomoConfigsDialog.css'\nimport { useImmer } from \"use-immer\";\nimport { useRef, useState } from 'react';\n\nfunction PomoConfigsDialog(props) {\n  const formRef = useRef(null);\n  const [newPomoConfig, setNewPomoConfig] = useImmer(props.pomoConfigs);\n\n  const [formValid, setFormValid] = useState(true);\n\n  return (\n    <>\n      <Dialog\n        style={{zIndex: 15}}\n        open={props.open}\n        preventOutsideDismiss={true}\n        onOpen={(event) => {\n          // Reset config files\n          setNewPomoConfig(props.pomoConfigs);\n        }}\n        onClose={(event) => {\n          if (event.target.action === \"confirm\") {\n            props.setPomoConfigs(newPomoConfig);\n          }\n          props.onClose()\n        }}\n      >\n        <DialogTitle>Configuration</DialogTitle>\n        <DialogContent>\n          <form ref={formRef} onChange={() => {\n            const newValid = formRef.current && formRef.current.reportValidity();\n            console.log(newValid);\n            if (newValid !== formValid) setFormValid(newValid);\n          }}>\n          <Grid>\n            <GridCell span={12}>\n              <GridRow>\n                <GridCell span={12}>\n                  <Typography use=\"subtitle2\">Pomodoro Config</Typography>\n                </GridCell>\n                <GridCell span={4}>\n                  <TextField required label=\"Focus Time\" type=\"number\"\n                    suffix=\"minutes\" pattern=\"[0-9]*\" min={1}\n                    defaultValue={props.pomoConfigs.alertStudySeconds / 60}\n                    onChange={(event) => {\n                      if (!event.target.validity.valid) {\n                        event.target.reportValidity();\n                        return;\n                      }\n                      setNewPomoConfig(\n                        (oldConfig) => { oldConfig.alertStudySeconds = parseInt(event.target.value) * 60 }\n                      )\n                    }}\n                  />\n                </GridCell>\n                <GridCell span={4}>\n                  <TextField required label=\"Rest Time\" type=\"number\"\n                    suffix=\"minutes\" pattern=\"[0-9]*\" min={1}\n                    defaultValue={props.pomoConfigs.alertRestSeconds / 60}\n                    onChange={(event) => {\n                      if (!event.target.reportValidity()) return;\n                      setNewPomoConfig(\n                        (oldConfig) => { oldConfig.alertRestSeconds = parseInt(event.target.value) * 60 }\n                      )\n                    }}\n                  />\n                </GridCell>\n                <GridCell span={4}>\n                  <Tooltip content=\"If the rest time or focus time is less than this, it will not be counted as a separted time slot.\">\n                    <TextField required label=\"Max allowed missing time\" type=\"number\"\n                      suffix=\"seconds\" pattern=\"[0-9]*\" min={0}\n                      defaultValue={props.pomoConfigs.tempMissingSeconds}\n                      onChange={(event) => {\n                        if (!event.target.reportValidity()) return;\n                        setNewPomoConfig(\n                          (oldConfig) => { oldConfig.tempMissingSeconds = parseInt(event.target.value) }\n                        )\n                      }}\n                    />\n                  </Tooltip>\n                </GridCell>\n              </GridRow>\n            </GridCell>\n            <GridCell span={12}><ListDivider /></GridCell>\n            <GridCell span={12}>\n              <Typography use=\"subtitle2\">Background Video Config</Typography>\n            </GridCell>\n            <GridCell span={12}>\n                <Tooltip content=\"Enter a Youtube video url. Leave empty to not play anything.\">\n                  <TextField style={{width:\"100%\"}} label=\"Youtube Url\" type=\"text\"\n                    defaultValue={props.pomoConfigs.playerUrl}\n                    onChange={(event) => {\n                      setNewPomoConfig(\n                        (oldConfig) => { oldConfig.playerUrl = event.target.value }\n                      )\n                    }}\n                  />\n                </Tooltip>\n            </GridCell>\n            <GridCell span={12}><ListDivider /></GridCell>\n            <GridCell span={12}>\n              <GridRow>\n                <GridCell span={12}>\n                  <Typography use=\"subtitle2\">Face Recognition Config</Typography>\n                </GridCell>\n                <GridCell>\n                  <Tooltip content=\"Every n seconds we detect user face, shorter interval might increase CPU usage, longer interval might make pomodoro less sensitive.\">\n                    <TextField required label=\"Face Detection Interval\" type=\"number\"\n                      pattern=\"[0-9]*\" suffix=\"seconds\" min={2}\n                      defaultValue={props.pomoConfigs.faceRecognition.detectionInterval}\n                      onChange={(event) => {\n                        if (!event.target.reportValidity()) return;\n                        const newTime = parseInt(event.target.value)\n                        setNewPomoConfig(\n                          (oldConfig) => { oldConfig.faceRecognition.detectionInterval = newTime }\n                        )\n                      }}\n                    />\n                  </Tooltip>\n                </GridCell>\n                <GridCell>\n                  <Switch\n                    defaultChecked={props.pomoConfigs.faceRecognition.showFaceRecognitionStatus}\n                    onChange={(event) => {\n                      setNewPomoConfig(\n                        (oldConfig) => { oldConfig.faceRecognition.showFaceRecognitionStatus = event.target.checked }\n                      )\n                    }}\n                    label=\"Show Face Recognition Status\"\n                  />\n                </GridCell>\n                <GridCell>\n                  <Switch\n                    defaultChecked={props.pomoConfigs.faceRecognition.showCameraPreview}\n                    onChange={(event) => {\n                      setNewPomoConfig(\n                        (oldConfig) => { oldConfig.faceRecognition.showCameraPreview = event.target.checked }\n                      )\n                    }}\n                    label=\"Show Live Camera Preview\"\n                  />\n                </GridCell>\n                <GridCell>\n                  <Switch\n                    defaultChecked={props.pomoConfigs.faceRecognition.showFaceRecognitionCanvas}\n                    onChange={(event) => {\n                      setNewPomoConfig(\n                        (oldConfig) => { oldConfig.faceRecognition.showFaceRecognitionCanvas = event.target.checked }\n                      )\n                    }}\n                    label=\"Show Face Detection Result\"\n                  />\n                </GridCell>\n              </GridRow>\n            </GridCell>\n            <GridCell span={12}><ListDivider /></GridCell>\n            <GridCell span={12}>\n              <GridRow>\n                <GridCell span={12}>\n                  <Typography use=\"subtitle2\">Notification Config</Typography>\n                </GridCell>\n                <GridCell span={4}>\n                  <TextField required label=\"Notification Interval Time\" type=\"number\"\n                    suffix=\"seconds\" pattern=\"[0-9]*\"\n                    defaultValue={props.pomoConfigs.notificationIntervalSeconds}\n                    onChange={(event) => {\n                      if (!event.target.reportValidity()) return;\n                      setNewPomoConfig(\n                        (oldConfig) => { oldConfig.notificationIntervalSeconds = parseInt(event.target.value) }\n                      )\n                    }}\n                  />\n                </GridCell>\n                <GridCell span={4}>\n                  <Tooltip content=\"Everytime a notification is send, its wait time will multiply previous interval, so that the sending interval is longer and longer. If you don't want this behavior, change it to 1.\">\n                    <TextField required label=\"Notification Interval Multiplier\"\n                      suffix=\"times\" pattern=\"[0-9\\.]*\" min={1} type=\"number\" step=\"0.1\"\n                      defaultValue={props.pomoConfigs.notificationIntervalMultiplier}\n                      onChange={(event) => {\n                        if (!event.target.reportValidity()) return;\n                        const newValue = parseFloat(event.target.value)\n                        setNewPomoConfig(\n                          (oldConfig) => { oldConfig.notificationIntervalMultiplier = newValue }\n                        )\n                      }}\n                    />\n                  </Tooltip>\n                </GridCell>\n                <GridCell span={12}>\n                  <Tooltip content=\"This message will be displayed to let you know it's time to start Pomodoro session.\">\n                    <TextField style={{width: \"100%\"}} required label=\"Focus Notification Message\"\n                      minLength={1}\n                      defaultValue={props.pomoConfigs.focusNotificationText}\n                      onChange={(event) => {\n                        if (!event.target.reportValidity()) return;\n                        setNewPomoConfig(\n                          (oldConfig) => { oldConfig.focusNotificationText = event.target.value }\n                        )\n                      }}\n                    />\n                  </Tooltip>\n                </GridCell>\n                <GridCell span={12}>\n                  <Tooltip content=\"This message will be displayed to let you know it's time to take a break.\">\n                    <TextField style={{width: \"100%\"}} required label=\"Rest Notification Message\"\n                      minLength={1}\n                      defaultValue={props.pomoConfigs.restNotificationText}\n                      onChange={(event) => {\n                        if (!event.target.reportValidity()) return;\n                        setNewPomoConfig(\n                          (oldConfig) => { oldConfig.restNotificationText = event.target.value }\n                        )\n                      }}\n                    />\n                  </Tooltip>\n                </GridCell>\n              </GridRow>\n            </GridCell>\n            <GridCell span={12}><ListDivider /></GridCell>\n            <GridCell span={12}>\n              <GridRow>\n                <GridCell span={12}>\n                  <Typography use=\"subtitle2\">Pomodoro History Config</Typography>\n                </GridCell>\n                <GridCell>\n                  <Tooltip content=\"Increasing this might degrade performance.\">\n                    <TextField required label=\"Max pomodoro history entries kepted\" type=\"number\"\n                      resizeable={true}\n                      pattern=\"[0-9]*\" suffix=\"entries\" min={1}\n                      defaultValue={props.pomoConfigs.history.maxLocalStorageTimeSlot}\n                      onChange={(event) => {\n                        if (!event.target.reportValidity()) return;\n                        setNewPomoConfig(\n                          (oldConfig) => { oldConfig.history.maxLocalStorageTimeSlot = parseInt(event.target.value) }\n                        )\n                      }}\n                    />\n                  </Tooltip>\n                </GridCell>\n                <GridCell>\n                  <Switch\n                    defaultChecked={props.pomoConfigs.history.showPomodoroHistory}\n                    onChange={(event) => {\n                      setNewPomoConfig(\n                        (oldConfig) => { oldConfig.history.showPomodoroHistory = event.target.checked }\n                      )\n                    }}\n                    label=\"Show Pomodoro History\"\n                  />\n                </GridCell>\n                <GridCell>\n                  <Switch\n                    defaultChecked={props.pomoConfigs.history.onlyShowToday}\n                    onChange={(event) => {\n                      setNewPomoConfig(\n                        (oldConfig) => { oldConfig.history.onlyShowToday = event.target.checked }\n                      )\n                    }}\n                    label=\"Only Show Today's History\"\n                  />\n                </GridCell>\n              </GridRow>\n            </GridCell>\n          </Grid>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <DialogButton action=\"close\">Cancel</DialogButton>\n          <DialogButton action=\"confirm\" disabled={!formValid} isDefaultAction>\n            Confirm\n          </DialogButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default PomoConfigsDialog;","import { Dialog, DialogTitle, DialogContent, DialogActions, DialogButton } from '@rmwc/dialog';\nimport '@rmwc/dialog/styles';\n\nimport { Typography } from '@rmwc/typography';\nimport '@rmwc/typography/styles';\n\nimport { Card, CardPrimaryAction} from '@rmwc/card';\nimport '@rmwc/card/styles';\n\nimport ReactMarkdown from 'react-markdown'\n\nfunction IntroDialog(props) {\n  const introMarkdown = `\nThis is a **Pomodoro Clock**. It's special because:\n\n- It can automatically help you start **a focus session** when the camera detected your face.\n- It can automatically start **a rest session** When the camera no longer detect your face \n\nWe will need two permission from you:\n- Permission to **send notification**, so that you will get reminded when session timed out.\n- Permission to **access your camera**.\n\nPlease click allow button around the browser's url.\n`\n\n  return (\n    <>\n      <Dialog\n        style={{zIndex: 15}}\n        open={props.open}\n        onClose={(event) => {\n          props.onClose()\n        }}\n      >\n        <DialogTitle>Intro to Face Recognition Pomodoro</DialogTitle>\n        <DialogContent>\n          <div style={{padding: \"10px\"}} />\n          <Card>\n            <CardPrimaryAction>\n              <div style={{ padding: '0 1rem 1rem 1rem' }}>\n                <Typography use=\"headline6\" tag=\"h2\">\n                What is this?\n                </Typography>\n                <Typography\n                  use=\"body1\"\n                  tag=\"div\"\n                  theme=\"textSecondaryOnBackground\"\n                >\n                <ReactMarkdown children={introMarkdown} />\n                </Typography>\n              </div>\n            </CardPrimaryAction>\n          </Card>\n          <div style={{padding: \"10px\"}} />\n          <Card>\n            <CardPrimaryAction>\n              <div style={{ padding: '0 1rem 1rem 1rem' }}>\n                <Typography use=\"headline6\" tag=\"h2\">\n                What if I left my camera but don't want to stop the Pomodoro session?\n                </Typography>\n                <Typography\n                  use=\"body1\"\n                  tag=\"div\"\n                  theme=\"textSecondaryOnBackground\"\n                >\n                <ReactMarkdown>\n                  If the time of stepping away is less than **Max Allowed Missing Time** \n                  in the settings, the Pomodoro session will continue the session when you are back.\n                </ReactMarkdown>\n                  \n                </Typography>\n              </div>\n            </CardPrimaryAction>\n          </Card>\n          <div style={{padding: \"10px\"}} />\n          <Card>\n            <CardPrimaryAction>\n              <div style={{ padding: '0 1rem 1rem 1rem' }}>\n                <Typography use=\"headline6\" tag=\"h2\">\n                Why this intro always popup on start?\n                </Typography>\n                <Typography\n                  use=\"body1\"\n                  tag=\"div\"\n                  theme=\"textSecondaryOnBackground\"\n                >\n                  There must be at least one user interaction to make notification works, so I take this opportunity to intro the tool.\n                </Typography>\n              </div>\n            </CardPrimaryAction>\n          </Card>\n          <div style={{padding: \"10px\"}} />\n          <Card>\n            <CardPrimaryAction>\n              <div style={{ padding: '0 1rem 1rem 1rem' }}>\n                <Typography use=\"headline6\" tag=\"h2\">\n                Will this slow down my computer or phone?\n                </Typography>\n                <Typography\n                  use=\"body1\"\n                  tag=\"div\"\n                  theme=\"textSecondaryOnBackground\"\n                >\n                  Usually not, it leverage GPU to detect your face and just takes a few milliseconds.\n                </Typography>\n              </div>\n            </CardPrimaryAction>\n          </Card>\n        </DialogContent>\n        <DialogActions>\n          <DialogButton action=\"confirm\" isDefaultAction>\n            Ok, let's continue.\n          </DialogButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default IntroDialog;","import HealthMonitor from \"./PeriodicChecks/HealthMonitor\";\nimport 'antd/dist/antd.css';\nimport { useState } from \"react\";\nimport { useLocalStorageState } from 'ahooks';\nimport { defaultPomoConfigs, PomoConfigsContext } from './UserConfigs/PomoConfigsContext'\nimport { TopAppBar, TopAppBarRow, TopAppBarSection, TopAppBarActionItem, TopAppBarTitle, TopAppBarFixedAdjust } from '@rmwc/top-app-bar';\nimport { ThemeProvider } from '@rmwc/theme'\nimport { css } from \"@emotion/css\";\nimport { produce } from 'immer';\n\nimport '@rmwc/theme/styles';\nimport '@rmwc/top-app-bar/styles';\nimport '@rmwc/icon/styles';\n\nimport PomoConfigsDialog from \"./dialogs/PomoConfigsDialog\";\nimport IntroDialog from \"./dialogs/IntroDialog\";\n\nfunction FaceRecognitionPomo() {\n  const [pomoConfigs, setPomoConfigs] = useLocalStorageState(\"pomoConfig\", {\n    defaultValue: defaultPomoConfigs\n  })\n\n  const [openConfigDialog, setOpenConfigDialog] = useState(false);\n  const [openIntroDialog, setOpenIntroDialog] = useState(true);\n\n  function onIntroDialogClose() {\n    setOpenIntroDialog(false)\n    setPomoConfigs(produce(\n      (oldConfig) => {\n        oldConfig.enableDetection = true;\n        oldConfig.enableNotification = true;\n      }\n    ))\n  }\n\n  return (\n    <>\n      <ThemeProvider\n        options={{\n          primary: '#bf360c',\n          secondary: '#616161'\n        }}\n      >\n\n        <TopAppBar style={{ zIndex: 15 }}>\n          <TopAppBarRow>\n            <TopAppBarSection alignStart>\n              <TopAppBarActionItem icon=\"help\" onClick={() => setOpenIntroDialog(true)} />\n            </TopAppBarSection>\n            <TopAppBarSection className={css`justify-content: center`}>\n              <TopAppBarTitle >\n                Face Recognition Pomodoro\n              </TopAppBarTitle>\n            </TopAppBarSection>\n            <TopAppBarSection alignEnd>\n              <TopAppBarActionItem icon=\"settings\" onClick={() => setOpenConfigDialog(true)} />\n            </TopAppBarSection>\n          </TopAppBarRow>\n        </TopAppBar>\n        <TopAppBarFixedAdjust />\n\n          <IntroDialog\n            open={openIntroDialog}\n            onClose={onIntroDialogClose}\n          />\n          <PomoConfigsDialog\n            open={openConfigDialog}\n            onClose={() => setOpenConfigDialog(false)}\n            pomoConfigs={pomoConfigs}\n            setPomoConfigs={setPomoConfigs}\n          />\n        <PomoConfigsContext.Provider value={pomoConfigs}>\n          <HealthMonitor />\n        </PomoConfigsContext.Provider>\n\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default FaceRecognitionPomo;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport FaceRecognitionPomo from \"./FaceRecognitionPomo\";\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // Remove restrict mode since meterial component dialog conflict with\n  //<React.StrictMode>\n    <FaceRecognitionPomo />\n  //  </React.StrictMode>\n);\n\nreportWebVitals(console.log);\n\nif ('serviceWorker' in navigator) {\n  navigator.serviceWorker.register('./sw.js').then(function(registration) {\n    console.log('SW registration succeeded with scope:', registration.scope);\n  }).catch(function(e) {\n    console.log('SW registration failed with error:', e);\n  });\n}\n"],"sourceRoot":""}