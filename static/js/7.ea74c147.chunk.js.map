{"version":3,"sources":["BackgroundPlayers/YoutubePlayer.js","BackgroundPlayers/PlayerWithStatus.js"],"names":["YoutubePlayer","props","playerRef","useRef","shouldPlay","opts","height","width","playerVars","autoplay","loop","playlist","vid","useEffect","current","console","log","internalPlayer","playVideo","pauseVideo","YouTube","className","css","ref","videoId","PlayerWithStatus","PomoConfigs","useContext","PomoConfigsContext","youtubeVid","url","match","length","youtube_parser","playerUrl","focus","overTime","playerStatusClassName","bounds","ReactFlipClock","startTime"],"mappings":"mPAIO,SAASA,EAAcC,GAC5B,IAAMC,EAAYC,iBAAO,MACnBC,EAAaH,EAAMG,WAEnBC,EAAO,CACXC,OAAQ,OACRC,MAAO,OACPC,WAAY,CAEVC,SAAU,EACVC,KAAM,EACNC,SAAUV,EAAMW,MAepB,OAXAC,qBAAU,WACHX,EAAUY,UACfC,QAAQC,IAAId,EAAUY,QAAQG,gBAC1Bb,EACFF,EAAUY,QAAQG,eAAeC,YAGjChB,EAAUY,QAAQG,eAAeE,gBAElC,CAACf,IAGA,cAACgB,EAAA,EAAD,CAASC,UACPC,YADgB,oHAMhBC,IAAKrB,EAAWsB,QAASvB,EAAMW,IAAKP,KAAMA,I,sDCvB3C,SAASoB,EAAiBxB,GAC/B,IAAMyB,EAAcC,qBAAWC,KAEzBC,EATR,SAAwBC,GACtB,IACIC,EAAQD,EAAIC,MADH,6EAEb,SAAQA,GAAyB,KAAlBA,EAAM,GAAGC,SAAcD,EAAM,GAMzBE,CADAP,EAAYQ,UAAYR,EAAYQ,UAAY,IAG/D9B,GAAa,EACbH,EAAMkC,QAAUlC,EAAMmC,WACxBhC,GAAa,GAGf,IAAMiC,EAAwBf,YAAH,6HAO3B,OACE,sBAAKD,UAAWgB,EAAhB,UACE,cAACrC,EAAD,CAAeY,IAAKiB,EAAYzB,WAAYA,IAC5C,8BACE,cAAC,IAAD,CAAWkC,OAAQ,IAAMD,EAAzB,SACE,sBAAKhB,UAAWC,YAAF,0VAAd,UAeE,cAAC,IAAD,CAAYD,UACVC,YADmB,kJAMnBa,MAAOlC,EAAMkC,QACf,cAACI,EAAA,EAAD,CAAgBC,UAAWvC,EAAMuC,sBAU9Bf","file":"static/js/7.ea74c147.chunk.js","sourcesContent":["import YouTube from 'react-youtube';\nimport { css } from '@emotion/css';\nimport { useEffect, useRef } from 'react';\n\nexport function YoutubePlayer(props) {\n  const playerRef = useRef(null);\n  const shouldPlay = props.shouldPlay;\n\n  const opts = {\n    height: '100%',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n      loop: 1,\n      playlist: props.vid,\n    },\n  };\n\n  useEffect(() => {\n    if (!playerRef.current) return;\n    console.log(playerRef.current.internalPlayer);\n    if (shouldPlay) {\n      playerRef.current.internalPlayer.playVideo()\n    }\n    else {\n      playerRef.current.internalPlayer.pauseVideo()\n    }\n  }, [shouldPlay])\n\n  return (\n      <YouTube className={\n        css`\n          height: 100%;\n          width: 100%;\n          position: relative;\n        `\n      } ref={playerRef} videoId={props.vid} opts={opts} />\n  );\n\n}","import { YoutubePlayer } from './YoutubePlayer'\nimport Draggable from 'react-draggable';\nimport { css } from '@emotion/css';\nimport { PomoStatus } from '../PomodoroStatus/PomodStatus';\nimport ReactFlipClock from '../flipclock/ReactFlipClock';\nimport { useContext } from 'react';\nimport { PomoConfigsContext } from '../UserConfigs/PomoConfigsContext';\n\nfunction youtube_parser(url){\n  var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n  var match = url.match(regExp);\n  return (match&&match[7].length===11)? match[7] : false;\n}\n\nexport function PlayerWithStatus(props) {\n  const PomoConfigs = useContext(PomoConfigsContext);\n  const youtubeUrl = PomoConfigs.playerUrl ? PomoConfigs.playerUrl : \"\";\n  const youtubeVid = youtube_parser(youtubeUrl)\n\n  var shouldPlay = false;\n  if (props.focus && !props.overTime) {\n    shouldPlay = true;\n  }\n\n  const playerStatusClassName = css`\n    height: calc(100vh - 64px);\n    width: 100vw;\n    max-width:100%;\n    max-height:100%;\n  `\n\n  return (\n    <div className={playerStatusClassName}>\n      <YoutubePlayer vid={youtubeVid} shouldPlay={shouldPlay}/>\n      <div>\n        <Draggable bounds={\".\" + playerStatusClassName}>\n          <div className={css`\n            background: white;\n            opacity: 0.7;\n            position: absolute;\n            top: 10vh;\n            left: 10px;\n\n            .flip-clock {\n                font-size: 15px;\n            }\n\n            padding: 10px;\n            border-radius: 10px;\n            cursor: grab;\n        `}>\n            <PomoStatus className={\n              css`\n                font-size: 70px;\n                margin: 0 auto;\n                text-align: center;\n              `\n            } focus={props.focus} />\n            <ReactFlipClock startTime={props.startTime} />\n          </div>\n        </Draggable>\n      </div>\n\n    </div>\n\n  )\n}\n\nexport default PlayerWithStatus"],"sourceRoot":""}